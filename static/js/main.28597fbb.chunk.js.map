{"version":3,"sources":["App.js","index.js"],"names":["$","require","App","props","state","input","formula","result","handleNumberInput","bind","initialize","handleOperatorInput","calc","handleDecimal","on","this","animate","opacity","e","oper","val","res","match","concat","operationList","i","length","test","parseFloat","parseInt","charAt","setState","target","innerText","id","React","Component","Keyboard","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28597fbb.chunk.js","sourcesContent":["\nimport React from 'react'\nimport './style.scss';\nvar $ = require( \"jquery\" )\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      input: \"0\",\n      formula: \"\",      \n      result: '',\n    }\n   this.handleNumberInput = this.handleNumberInput.bind(this);\n   this.initialize = this.initialize.bind(this);\n   this.handleOperatorInput = this.handleOperatorInput.bind(this);\n   this.calc = this.calc.bind(this);\n   this.handleDecimal = this.handleDecimal.bind(this); \n \n  }\n  componentDidMount(){\n    $('button').on(\"click\", function(){\n      $(this).animate({opacity: 0.5}, 60 );\n      $(this).animate({opacity: 1}, 60);\n      \n      \n    })\n    \n  }\n  \n  calc(e){\n    let formula = this.state.formula;\n    var oper, val, res = 0;\n    \n    oper = formula.match(/^[^0-9.]+/);\n    \n    if(oper === null){\n      formula = '+'.concat(formula);\n    }\n    \n    var operationList = formula.match(/[^0-9.]+([0-9.]+)/g);\n      \n    for ( let i = 0 ; i < operationList.length ; i++ ){\n      oper = operationList[i].match(/[^0-9.]+/);\n      oper = oper[0]\n      val = operationList[i].match(/[0-9.]+/);\n      val = val[0]\n      \n       /*parse value*/\n      if (/\\./g.test(val)){\n       val = parseFloat(val)\n      } else {\n        val = parseInt(val)\n      }\n      \n       /* prepare operator in case there are several of them and the last one is minus (-) */\n      if (oper.length > 1 && oper.charAt(oper.length - 1) === '-'){\n        val = -val;  \n        oper = oper.charAt(oper.length - 2);\n      } else {\n        oper = oper.charAt(oper.length - 1)\n      }\n      \n       switch ( oper ){\n          case 'x':\n            res = res * val;\n            break;\n          case '/':\n            res = res / val;\n            break;\n          case '+':                   \n           res += val;         \n            break;\n          case '-':\n            res -= val;\n            break;\n          default: \n            res = \"Nan\";\n            break;\n        }\n    }\n    \n   \n      this.setState({\n        formula: this.state.formula.concat('='),\n        input: res\n      })\n    \n}\n  \n  handleOperatorInput(e){\n    if ( /\\d/g.test(this.state.input) ){\n      this.setState({\n        input: e.target.innerText,\n        formula: this.state.formula.concat(e.target.innerText)\n      });\n    } else {\n      this.setState({\n        input: this.state.input.concat(e.target.innerText),\n        formula: this.state.formula.concat(e.target.innerText)\n      })\n    }\n  }\n  \n  /*prevent input two dots*/\n  handleDecimal(e){    \n    \n    var input = this.state.input;\n    var dots = input.match(/\\./g)\n    \n    if (dots === null ){\n      this.setState({\n        input: this.state.input.concat(e.target.innerText),\n        formula: this.state.formula.concat(e.target.innerText)\n      });      \n    }     \n  }\n  \n  /*when number is input*/\n  handleNumberInput(e){\n    \n    /*this is first input or if result is displayed on the screen*/\n    if( this.state.input === '0' || this.state.input === this.state.result ){\n       this.setState({\n          input: e.target.innerText,\n          formula: (e.target.innerText)\n         });\n    } else if (/[x/+-]/g.test(this.state.input)){\n      /* if input was operator change it to value*/\n      this.setState({\n        input: e.target.innerText,\n        formula: this.state.formula.concat(e.target.innerText)\n      })\n    } else {\n      /* if input was number append next input to input */\n      this.setState({\n        input: this.state.input.concat(e.target.innerText),\n        formula: this.state.formula.concat(e.target.innerText)\n      });\n    } \n  }\n  \n  /* set all values to the initial mode*/\n  initialize(){\n    this.setState({\n      input: \"0\",\n      formula: \"\",\n      result: 0,\n    });\n  }\n  render(){\n    return (\n      <div id=\"calculator\">\n        <div id=\"calcScreen\">\n          <div id=\"formula\">{this.state.formula}</div>\n          <div id=\"display\">{this.state.input}</div>          \n        </div>    \n        <Keyboard \n          handleNumberInput={this.handleNumberInput}\n          initialize={this.initialize}\n          handleOperatorInput={this.handleOperatorInput}\n          calc={this.calc}\n          handleDecimal={this.handleDecimal}\n          />\n      </div>\n    )\n  }\n}\n\n/* render buttoms*/\nclass Keyboard extends React.Component {\n  render(){\n    return (\n      <div id=\"keyboard\">\n        <button id=\"clear\" onClick={this.props.initialize}>c</button>\n        <button id=\"multiply\" onClick={this.props.handleOperatorInput}>x</button>\n        <button id=\"divide\" onClick={this.props.handleOperatorInput}>/</button>\n        <button id=\"subtract\" onClick={this.props.handleOperatorInput}>-</button>\n        <button id=\"add\" onClick={this.props.handleOperatorInput}>+</button>\n        <button id=\"one\" onClick={this.props.handleNumberInput}>1</button>\n        <button id=\"two\" onClick={this.props.handleNumberInput}>2</button>\n        <button id=\"three\" onClick={this.props.handleNumberInput}>3</button>\n        <button id=\"four\" onClick={this.props.handleNumberInput}>4</button>\n        <button id=\"five\" onClick={this.props.handleNumberInput}>5</button>\n        <button id=\"six\" onClick={this.props.handleNumberInput}>6</button>\n        <button id=\"seven\" onClick={this.props.handleNumberInput}>7</button>\n        <button id=\"eight\" onClick={this.props.handleNumberInput}>8</button>\n        <button id=\"nine\" onClick={this.props.handleNumberInput}>9</button>\n        <button id=\"zero\" onClick={this.props.handleNumberInput}>0</button>\n        <button id=\"decimal\" onClick={this.props.handleDecimal}>.</button>\n        <button id=\"equals\" onClick={this.props.calc}>=</button>        \n      </div>\n    )    \n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}